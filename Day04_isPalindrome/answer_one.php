<?php
/**
 * Created by PhpStorm.
 * User: zhangdeTalk
 * Date: 2020-01-20
 * @param Integer $x
 * @return Boolean
 */
function isPalindrome($x){
    //特殊情况
    //1、小于0的负数肯定不是回文数
    //2、最后一位是0，且第一位也不是0，肯定不是回文数
    if($x < 0 || ($x%10 == 0 && $x != 0)){
        return false;
    }
    $res = 0;//反转后的数
    while($x > $res){//当x小于等于res时，即已经反转一半了
        $res = $res*10 + $x%10;
        $x = intval($x/10);//需要使用intval强制把浮点转整型
    }
    //当x的位数为偶数时，比如1221，循环的最后，x=12，res=12
    //当x的位数为奇数时，比如12321，循环的最后，x=12，res=123，但中间的位数对于回文数没有影响，所以res除以10可以剔除掉
    return $x == $res || $x == intval($res/10);
}
/**
 * 难度: 简单
 * 标签: 数学
 * 解法: 反转一半数字
 * 思路: 第一想到的两种办法是，1、通过整数转换字符串反转后判断两数是否相等（时间复杂度O(n)） 2、数学方法全反转(时间复杂度O(logn))
 * 以上两种方法可以解决，但不是最优的，因为还需要判断是否益处
 * 最佳的方法：还是使用数学方法进行反转，但是只需反转一半即可
 * 时间复杂度: O(log10(n))
 * 对于每次迭代，我们会将输入除以10
 * 空间复杂度: O(1)
 *
 */
var_dump(isPalindrome(121));